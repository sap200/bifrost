// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bifrost/receivedFa12Txs.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ReceivedFa12Txs struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id             uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Txid           string `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	TezosSender    string `protobuf:"bytes,4,opt,name=tezosSender,proto3" json:"tezosSender,omitempty"`
	Denom          string `protobuf:"bytes,5,opt,name=denom,proto3" json:"denom,omitempty"`
	CosmosReceiver string `protobuf:"bytes,6,opt,name=cosmosReceiver,proto3" json:"cosmosReceiver,omitempty"`
	Amount         string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	SrcChain       string `protobuf:"bytes,8,opt,name=srcChain,proto3" json:"srcChain,omitempty"`
	DestChain      string `protobuf:"bytes,9,opt,name=destChain,proto3" json:"destChain,omitempty"`
	TxStatus       string `protobuf:"bytes,10,opt,name=txStatus,proto3" json:"txStatus,omitempty"`
	IsApproval     string `protobuf:"bytes,11,opt,name=isApproval,proto3" json:"isApproval,omitempty"`
	Approver       string `protobuf:"bytes,12,opt,name=approver,proto3" json:"approver,omitempty"`
	Timestamp      string `protobuf:"bytes,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RelayTimestamp string `protobuf:"bytes,14,opt,name=relayTimestamp,proto3" json:"relayTimestamp,omitempty"`
}

func (m *ReceivedFa12Txs) Reset()         { *m = ReceivedFa12Txs{} }
func (m *ReceivedFa12Txs) String() string { return proto.CompactTextString(m) }
func (*ReceivedFa12Txs) ProtoMessage()    {}
func (*ReceivedFa12Txs) Descriptor() ([]byte, []int) {
	return fileDescriptor_081e44974737f20e, []int{0}
}
func (m *ReceivedFa12Txs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReceivedFa12Txs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReceivedFa12Txs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReceivedFa12Txs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivedFa12Txs.Merge(m, src)
}
func (m *ReceivedFa12Txs) XXX_Size() int {
	return m.Size()
}
func (m *ReceivedFa12Txs) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivedFa12Txs.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivedFa12Txs proto.InternalMessageInfo

func (m *ReceivedFa12Txs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ReceivedFa12Txs) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReceivedFa12Txs) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *ReceivedFa12Txs) GetTezosSender() string {
	if m != nil {
		return m.TezosSender
	}
	return ""
}

func (m *ReceivedFa12Txs) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *ReceivedFa12Txs) GetCosmosReceiver() string {
	if m != nil {
		return m.CosmosReceiver
	}
	return ""
}

func (m *ReceivedFa12Txs) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ReceivedFa12Txs) GetSrcChain() string {
	if m != nil {
		return m.SrcChain
	}
	return ""
}

func (m *ReceivedFa12Txs) GetDestChain() string {
	if m != nil {
		return m.DestChain
	}
	return ""
}

func (m *ReceivedFa12Txs) GetTxStatus() string {
	if m != nil {
		return m.TxStatus
	}
	return ""
}

func (m *ReceivedFa12Txs) GetIsApproval() string {
	if m != nil {
		return m.IsApproval
	}
	return ""
}

func (m *ReceivedFa12Txs) GetApprover() string {
	if m != nil {
		return m.Approver
	}
	return ""
}

func (m *ReceivedFa12Txs) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ReceivedFa12Txs) GetRelayTimestamp() string {
	if m != nil {
		return m.RelayTimestamp
	}
	return ""
}

func init() {
	proto.RegisterType((*ReceivedFa12Txs)(nil), "sap200.bifrost.bifrost.ReceivedFa12Txs")
}

func init() { proto.RegisterFile("bifrost/receivedFa12Txs.proto", fileDescriptor_081e44974737f20e) }

var fileDescriptor_081e44974737f20e = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4f, 0x4e, 0xc2, 0x40,
	0x14, 0xc6, 0x29, 0xff, 0x79, 0x28, 0x26, 0x13, 0x42, 0x26, 0x44, 0x1b, 0xe2, 0xc2, 0xe0, 0x86,
	0x22, 0x9e, 0x40, 0x49, 0x3c, 0x00, 0xb0, 0x72, 0x37, 0xb4, 0x23, 0x4c, 0x42, 0x3b, 0xcd, 0xcc,
	0x83, 0x14, 0x4f, 0xe1, 0x0d, 0xbc, 0x8e, 0x4b, 0x96, 0x2e, 0x0d, 0x5c, 0xc4, 0x74, 0x86, 0x56,
	0x70, 0xd5, 0xf7, 0x7d, 0xbf, 0xef, 0xeb, 0x74, 0xf2, 0x0a, 0x37, 0x73, 0xf1, 0xa6, 0xa4, 0x46,
	0x4f, 0x71, 0x9f, 0x8b, 0x0d, 0x0f, 0x5e, 0xd8, 0xc3, 0x68, 0x96, 0xe8, 0x41, 0xac, 0x24, 0x4a,
	0xd2, 0xd1, 0x2c, 0x1e, 0x0d, 0x87, 0x83, 0x63, 0x2a, 0x7b, 0x76, 0xdb, 0x0b, 0xb9, 0x90, 0x26,
	0xe2, 0xa5, 0x93, 0x4d, 0xdf, 0x7e, 0x96, 0xe0, 0x6a, 0x72, 0xfe, 0x1e, 0x42, 0xa1, 0xe6, 0x2b,
	0xce, 0x50, 0x2a, 0xea, 0xf4, 0x9c, 0x7e, 0x63, 0x92, 0x49, 0xd2, 0x82, 0xa2, 0x08, 0x68, 0xb1,
	0xe7, 0xf4, 0xcb, 0x93, 0xa2, 0x08, 0x08, 0x81, 0x32, 0x26, 0x22, 0xa0, 0x25, 0x13, 0x33, 0x33,
	0xe9, 0x41, 0x13, 0xf9, 0xbb, 0xd4, 0x53, 0x1e, 0x05, 0x5c, 0xd1, 0xb2, 0x41, 0xa7, 0x16, 0x69,
	0x43, 0x25, 0xe0, 0x91, 0x0c, 0x69, 0xc5, 0x30, 0x2b, 0xc8, 0x1d, 0xb4, 0x7c, 0xa9, 0x43, 0xa9,
	0x8f, 0x9f, 0xa3, 0x68, 0xd5, 0xe0, 0x7f, 0x2e, 0xe9, 0x40, 0x95, 0x85, 0x72, 0x1d, 0x21, 0xad,
	0x19, 0x7e, 0x54, 0xa4, 0x0b, 0x75, 0xad, 0xfc, 0xf1, 0x92, 0x89, 0x88, 0xd6, 0x0d, 0xc9, 0x35,
	0xb9, 0x86, 0x46, 0xc0, 0x35, 0x5a, 0xd8, 0x30, 0xf0, 0xcf, 0x48, 0x9b, 0x98, 0x4c, 0x91, 0xe1,
	0x5a, 0x53, 0xb0, 0xcd, 0x4c, 0x13, 0x17, 0x40, 0xe8, 0xa7, 0x38, 0x56, 0x72, 0xc3, 0x56, 0xb4,
	0x69, 0xe8, 0x89, 0x93, 0x76, 0x99, 0x99, 0xb9, 0xa2, 0x17, 0xb6, 0x9b, 0xe9, 0xf4, 0x54, 0x14,
	0x21, 0xd7, 0xc8, 0xc2, 0x98, 0x5e, 0xda, 0x53, 0x73, 0x23, 0xbd, 0xaf, 0xe2, 0x2b, 0xb6, 0x9d,
	0xe5, 0x91, 0x96, 0xbd, 0xef, 0xb9, 0xfb, 0x3c, 0xfe, 0xda, 0xbb, 0xce, 0x6e, 0xef, 0x3a, 0x3f,
	0x7b, 0xd7, 0xf9, 0x38, 0xb8, 0x85, 0xdd, 0xc1, 0x2d, 0x7c, 0x1f, 0xdc, 0xc2, 0xeb, 0xfd, 0x42,
	0xe0, 0x72, 0x3d, 0x1f, 0xf8, 0x32, 0xf4, 0xec, 0xd2, 0xbd, 0xec, 0xd7, 0x48, 0xf2, 0x09, 0xb7,
	0x31, 0xd7, 0xf3, 0xaa, 0xd9, 0xf6, 0xe3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x84, 0xf9,
	0x7f, 0x3c, 0x02, 0x00, 0x00,
}

func (m *ReceivedFa12Txs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReceivedFa12Txs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReceivedFa12Txs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RelayTimestamp) > 0 {
		i -= len(m.RelayTimestamp)
		copy(dAtA[i:], m.RelayTimestamp)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.RelayTimestamp)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Approver) > 0 {
		i -= len(m.Approver)
		copy(dAtA[i:], m.Approver)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.Approver)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.IsApproval) > 0 {
		i -= len(m.IsApproval)
		copy(dAtA[i:], m.IsApproval)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.IsApproval)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.TxStatus) > 0 {
		i -= len(m.TxStatus)
		copy(dAtA[i:], m.TxStatus)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.TxStatus)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.DestChain) > 0 {
		i -= len(m.DestChain)
		copy(dAtA[i:], m.DestChain)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.DestChain)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.SrcChain) > 0 {
		i -= len(m.SrcChain)
		copy(dAtA[i:], m.SrcChain)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.SrcChain)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CosmosReceiver) > 0 {
		i -= len(m.CosmosReceiver)
		copy(dAtA[i:], m.CosmosReceiver)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.CosmosReceiver)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TezosSender) > 0 {
		i -= len(m.TezosSender)
		copy(dAtA[i:], m.TezosSender)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.TezosSender)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Txid) > 0 {
		i -= len(m.Txid)
		copy(dAtA[i:], m.Txid)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.Txid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintReceivedFa12Txs(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintReceivedFa12Txs(dAtA []byte, offset int, v uint64) int {
	offset -= sovReceivedFa12Txs(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ReceivedFa12Txs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovReceivedFa12Txs(uint64(m.Id))
	}
	l = len(m.Txid)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.TezosSender)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.CosmosReceiver)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.SrcChain)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.DestChain)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.TxStatus)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.IsApproval)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.Approver)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	l = len(m.RelayTimestamp)
	if l > 0 {
		n += 1 + l + sovReceivedFa12Txs(uint64(l))
	}
	return n
}

func sovReceivedFa12Txs(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozReceivedFa12Txs(x uint64) (n int) {
	return sovReceivedFa12Txs(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ReceivedFa12Txs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReceivedFa12Txs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReceivedFa12Txs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReceivedFa12Txs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Txid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosSender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosSender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosmosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CosmosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsApproval", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsApproval = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Approver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipReceivedFa12Txs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReceivedFa12Txs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipReceivedFa12Txs(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowReceivedFa12Txs
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowReceivedFa12Txs
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthReceivedFa12Txs
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupReceivedFa12Txs
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthReceivedFa12Txs
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthReceivedFa12Txs        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowReceivedFa12Txs          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupReceivedFa12Txs = fmt.Errorf("proto: unexpected end of group")
)
