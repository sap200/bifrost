// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bifrost/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateSendToTezosSigned struct {
	Creator               string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TezosReceiver         string `protobuf:"bytes,2,opt,name=tezosReceiver,proto3" json:"tezosReceiver,omitempty"`
	Amount                string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom                 string `protobuf:"bytes,4,opt,name=denom,proto3" json:"denom,omitempty"`
	TezosSignerPrivateKey string `protobuf:"bytes,5,opt,name=tezosSignerPrivateKey,proto3" json:"tezosSignerPrivateKey,omitempty"`
}

func (m *MsgCreateSendToTezosSigned) Reset()         { *m = MsgCreateSendToTezosSigned{} }
func (m *MsgCreateSendToTezosSigned) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSendToTezosSigned) ProtoMessage()    {}
func (*MsgCreateSendToTezosSigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{0}
}
func (m *MsgCreateSendToTezosSigned) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSendToTezosSigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSendToTezosSigned.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSendToTezosSigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSendToTezosSigned.Merge(m, src)
}
func (m *MsgCreateSendToTezosSigned) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSendToTezosSigned) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSendToTezosSigned.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSendToTezosSigned proto.InternalMessageInfo

func (m *MsgCreateSendToTezosSigned) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSendToTezosSigned) GetTezosReceiver() string {
	if m != nil {
		return m.TezosReceiver
	}
	return ""
}

func (m *MsgCreateSendToTezosSigned) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgCreateSendToTezosSigned) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgCreateSendToTezosSigned) GetTezosSignerPrivateKey() string {
	if m != nil {
		return m.TezosSignerPrivateKey
	}
	return ""
}

type MsgCreateSendToTezosSignedResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSendToTezosSignedResponse) Reset()         { *m = MsgCreateSendToTezosSignedResponse{} }
func (m *MsgCreateSendToTezosSignedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSendToTezosSignedResponse) ProtoMessage()    {}
func (*MsgCreateSendToTezosSignedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{1}
}
func (m *MsgCreateSendToTezosSignedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSendToTezosSignedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSendToTezosSignedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSendToTezosSignedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSendToTezosSignedResponse.Merge(m, src)
}
func (m *MsgCreateSendToTezosSignedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSendToTezosSignedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSendToTezosSignedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSendToTezosSignedResponse proto.InternalMessageInfo

func (m *MsgCreateSendToTezosSignedResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSendToTezosSigned struct {
	Creator               string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                    uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	TezosReceiver         string `protobuf:"bytes,3,opt,name=tezosReceiver,proto3" json:"tezosReceiver,omitempty"`
	Amount                string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom                 string `protobuf:"bytes,5,opt,name=denom,proto3" json:"denom,omitempty"`
	TezosSignerPrivateKey string `protobuf:"bytes,6,opt,name=tezosSignerPrivateKey,proto3" json:"tezosSignerPrivateKey,omitempty"`
}

func (m *MsgUpdateSendToTezosSigned) Reset()         { *m = MsgUpdateSendToTezosSigned{} }
func (m *MsgUpdateSendToTezosSigned) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSendToTezosSigned) ProtoMessage()    {}
func (*MsgUpdateSendToTezosSigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{2}
}
func (m *MsgUpdateSendToTezosSigned) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSendToTezosSigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSendToTezosSigned.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSendToTezosSigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSendToTezosSigned.Merge(m, src)
}
func (m *MsgUpdateSendToTezosSigned) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSendToTezosSigned) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSendToTezosSigned.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSendToTezosSigned proto.InternalMessageInfo

func (m *MsgUpdateSendToTezosSigned) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSendToTezosSigned) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSendToTezosSigned) GetTezosReceiver() string {
	if m != nil {
		return m.TezosReceiver
	}
	return ""
}

func (m *MsgUpdateSendToTezosSigned) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgUpdateSendToTezosSigned) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgUpdateSendToTezosSigned) GetTezosSignerPrivateKey() string {
	if m != nil {
		return m.TezosSignerPrivateKey
	}
	return ""
}

type MsgUpdateSendToTezosSignedResponse struct {
}

func (m *MsgUpdateSendToTezosSignedResponse) Reset()         { *m = MsgUpdateSendToTezosSignedResponse{} }
func (m *MsgUpdateSendToTezosSignedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSendToTezosSignedResponse) ProtoMessage()    {}
func (*MsgUpdateSendToTezosSignedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{3}
}
func (m *MsgUpdateSendToTezosSignedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSendToTezosSignedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSendToTezosSignedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSendToTezosSignedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSendToTezosSignedResponse.Merge(m, src)
}
func (m *MsgUpdateSendToTezosSignedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSendToTezosSignedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSendToTezosSignedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSendToTezosSignedResponse proto.InternalMessageInfo

type MsgDeleteSendToTezosSigned struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSendToTezosSigned) Reset()         { *m = MsgDeleteSendToTezosSigned{} }
func (m *MsgDeleteSendToTezosSigned) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSendToTezosSigned) ProtoMessage()    {}
func (*MsgDeleteSendToTezosSigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{4}
}
func (m *MsgDeleteSendToTezosSigned) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSendToTezosSigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSendToTezosSigned.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSendToTezosSigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSendToTezosSigned.Merge(m, src)
}
func (m *MsgDeleteSendToTezosSigned) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSendToTezosSigned) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSendToTezosSigned.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSendToTezosSigned proto.InternalMessageInfo

func (m *MsgDeleteSendToTezosSigned) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSendToTezosSigned) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSendToTezosSignedResponse struct {
}

func (m *MsgDeleteSendToTezosSignedResponse) Reset()         { *m = MsgDeleteSendToTezosSignedResponse{} }
func (m *MsgDeleteSendToTezosSignedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSendToTezosSignedResponse) ProtoMessage()    {}
func (*MsgDeleteSendToTezosSignedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{5}
}
func (m *MsgDeleteSendToTezosSignedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSendToTezosSignedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSendToTezosSignedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSendToTezosSignedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSendToTezosSignedResponse.Merge(m, src)
}
func (m *MsgDeleteSendToTezosSignedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSendToTezosSignedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSendToTezosSignedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSendToTezosSignedResponse proto.InternalMessageInfo

type MsgCreateReceivedFa12Txs struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Txid           string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	TezosSender    string `protobuf:"bytes,3,opt,name=tezosSender,proto3" json:"tezosSender,omitempty"`
	Denom          string `protobuf:"bytes,4,opt,name=denom,proto3" json:"denom,omitempty"`
	CosmosReceiver string `protobuf:"bytes,5,opt,name=cosmosReceiver,proto3" json:"cosmosReceiver,omitempty"`
	Amount         string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	SrcChain       string `protobuf:"bytes,7,opt,name=srcChain,proto3" json:"srcChain,omitempty"`
	DestChain      string `protobuf:"bytes,8,opt,name=destChain,proto3" json:"destChain,omitempty"`
	TxStatus       string `protobuf:"bytes,9,opt,name=txStatus,proto3" json:"txStatus,omitempty"`
	IsApproval     string `protobuf:"bytes,10,opt,name=isApproval,proto3" json:"isApproval,omitempty"`
	Approver       string `protobuf:"bytes,11,opt,name=approver,proto3" json:"approver,omitempty"`
	Timestamp      string `protobuf:"bytes,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RelayTimestamp string `protobuf:"bytes,13,opt,name=relayTimestamp,proto3" json:"relayTimestamp,omitempty"`
}

func (m *MsgCreateReceivedFa12Txs) Reset()         { *m = MsgCreateReceivedFa12Txs{} }
func (m *MsgCreateReceivedFa12Txs) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReceivedFa12Txs) ProtoMessage()    {}
func (*MsgCreateReceivedFa12Txs) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{6}
}
func (m *MsgCreateReceivedFa12Txs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReceivedFa12Txs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReceivedFa12Txs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReceivedFa12Txs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReceivedFa12Txs.Merge(m, src)
}
func (m *MsgCreateReceivedFa12Txs) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReceivedFa12Txs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReceivedFa12Txs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReceivedFa12Txs proto.InternalMessageInfo

func (m *MsgCreateReceivedFa12Txs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetTezosSender() string {
	if m != nil {
		return m.TezosSender
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetCosmosReceiver() string {
	if m != nil {
		return m.CosmosReceiver
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetSrcChain() string {
	if m != nil {
		return m.SrcChain
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetDestChain() string {
	if m != nil {
		return m.DestChain
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetTxStatus() string {
	if m != nil {
		return m.TxStatus
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetIsApproval() string {
	if m != nil {
		return m.IsApproval
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetApprover() string {
	if m != nil {
		return m.Approver
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *MsgCreateReceivedFa12Txs) GetRelayTimestamp() string {
	if m != nil {
		return m.RelayTimestamp
	}
	return ""
}

type MsgCreateReceivedFa12TxsResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateReceivedFa12TxsResponse) Reset()         { *m = MsgCreateReceivedFa12TxsResponse{} }
func (m *MsgCreateReceivedFa12TxsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReceivedFa12TxsResponse) ProtoMessage()    {}
func (*MsgCreateReceivedFa12TxsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{7}
}
func (m *MsgCreateReceivedFa12TxsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReceivedFa12TxsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReceivedFa12TxsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReceivedFa12TxsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReceivedFa12TxsResponse.Merge(m, src)
}
func (m *MsgCreateReceivedFa12TxsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReceivedFa12TxsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReceivedFa12TxsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReceivedFa12TxsResponse proto.InternalMessageInfo

func (m *MsgCreateReceivedFa12TxsResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateReceivedFa12Txs struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id             uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Txid           string `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	TezosSender    string `protobuf:"bytes,4,opt,name=tezosSender,proto3" json:"tezosSender,omitempty"`
	Denom          string `protobuf:"bytes,5,opt,name=denom,proto3" json:"denom,omitempty"`
	CosmosReceiver string `protobuf:"bytes,6,opt,name=cosmosReceiver,proto3" json:"cosmosReceiver,omitempty"`
	Amount         string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	SrcChain       string `protobuf:"bytes,8,opt,name=srcChain,proto3" json:"srcChain,omitempty"`
	DestChain      string `protobuf:"bytes,9,opt,name=destChain,proto3" json:"destChain,omitempty"`
	TxStatus       string `protobuf:"bytes,10,opt,name=txStatus,proto3" json:"txStatus,omitempty"`
	IsApproval     string `protobuf:"bytes,11,opt,name=isApproval,proto3" json:"isApproval,omitempty"`
	Approver       string `protobuf:"bytes,12,opt,name=approver,proto3" json:"approver,omitempty"`
	Timestamp      string `protobuf:"bytes,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RelayTimestamp string `protobuf:"bytes,14,opt,name=relayTimestamp,proto3" json:"relayTimestamp,omitempty"`
}

func (m *MsgUpdateReceivedFa12Txs) Reset()         { *m = MsgUpdateReceivedFa12Txs{} }
func (m *MsgUpdateReceivedFa12Txs) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReceivedFa12Txs) ProtoMessage()    {}
func (*MsgUpdateReceivedFa12Txs) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{8}
}
func (m *MsgUpdateReceivedFa12Txs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReceivedFa12Txs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReceivedFa12Txs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReceivedFa12Txs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReceivedFa12Txs.Merge(m, src)
}
func (m *MsgUpdateReceivedFa12Txs) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReceivedFa12Txs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReceivedFa12Txs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReceivedFa12Txs proto.InternalMessageInfo

func (m *MsgUpdateReceivedFa12Txs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateReceivedFa12Txs) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetTezosSender() string {
	if m != nil {
		return m.TezosSender
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetCosmosReceiver() string {
	if m != nil {
		return m.CosmosReceiver
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetSrcChain() string {
	if m != nil {
		return m.SrcChain
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetDestChain() string {
	if m != nil {
		return m.DestChain
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetTxStatus() string {
	if m != nil {
		return m.TxStatus
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetIsApproval() string {
	if m != nil {
		return m.IsApproval
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetApprover() string {
	if m != nil {
		return m.Approver
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *MsgUpdateReceivedFa12Txs) GetRelayTimestamp() string {
	if m != nil {
		return m.RelayTimestamp
	}
	return ""
}

type MsgUpdateReceivedFa12TxsResponse struct {
}

func (m *MsgUpdateReceivedFa12TxsResponse) Reset()         { *m = MsgUpdateReceivedFa12TxsResponse{} }
func (m *MsgUpdateReceivedFa12TxsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReceivedFa12TxsResponse) ProtoMessage()    {}
func (*MsgUpdateReceivedFa12TxsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{9}
}
func (m *MsgUpdateReceivedFa12TxsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReceivedFa12TxsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReceivedFa12TxsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReceivedFa12TxsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReceivedFa12TxsResponse.Merge(m, src)
}
func (m *MsgUpdateReceivedFa12TxsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReceivedFa12TxsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReceivedFa12TxsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReceivedFa12TxsResponse proto.InternalMessageInfo

type MsgDeleteReceivedFa12Txs struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteReceivedFa12Txs) Reset()         { *m = MsgDeleteReceivedFa12Txs{} }
func (m *MsgDeleteReceivedFa12Txs) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReceivedFa12Txs) ProtoMessage()    {}
func (*MsgDeleteReceivedFa12Txs) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{10}
}
func (m *MsgDeleteReceivedFa12Txs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReceivedFa12Txs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReceivedFa12Txs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReceivedFa12Txs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReceivedFa12Txs.Merge(m, src)
}
func (m *MsgDeleteReceivedFa12Txs) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReceivedFa12Txs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReceivedFa12Txs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReceivedFa12Txs proto.InternalMessageInfo

func (m *MsgDeleteReceivedFa12Txs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteReceivedFa12Txs) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteReceivedFa12TxsResponse struct {
}

func (m *MsgDeleteReceivedFa12TxsResponse) Reset()         { *m = MsgDeleteReceivedFa12TxsResponse{} }
func (m *MsgDeleteReceivedFa12TxsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReceivedFa12TxsResponse) ProtoMessage()    {}
func (*MsgDeleteReceivedFa12TxsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{11}
}
func (m *MsgDeleteReceivedFa12TxsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReceivedFa12TxsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReceivedFa12TxsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReceivedFa12TxsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReceivedFa12TxsResponse.Merge(m, src)
}
func (m *MsgDeleteReceivedFa12TxsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReceivedFa12TxsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReceivedFa12TxsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReceivedFa12TxsResponse proto.InternalMessageInfo

type MsgCreateSendToTezos struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TezosReceiver string `protobuf:"bytes,2,opt,name=tezosReceiver,proto3" json:"tezosReceiver,omitempty"`
	Amount        string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom         string `protobuf:"bytes,4,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (m *MsgCreateSendToTezos) Reset()         { *m = MsgCreateSendToTezos{} }
func (m *MsgCreateSendToTezos) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSendToTezos) ProtoMessage()    {}
func (*MsgCreateSendToTezos) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{12}
}
func (m *MsgCreateSendToTezos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSendToTezos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSendToTezos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSendToTezos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSendToTezos.Merge(m, src)
}
func (m *MsgCreateSendToTezos) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSendToTezos) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSendToTezos.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSendToTezos proto.InternalMessageInfo

func (m *MsgCreateSendToTezos) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSendToTezos) GetTezosReceiver() string {
	if m != nil {
		return m.TezosReceiver
	}
	return ""
}

func (m *MsgCreateSendToTezos) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgCreateSendToTezos) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

type MsgCreateSendToTezosResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSendToTezosResponse) Reset()         { *m = MsgCreateSendToTezosResponse{} }
func (m *MsgCreateSendToTezosResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSendToTezosResponse) ProtoMessage()    {}
func (*MsgCreateSendToTezosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{13}
}
func (m *MsgCreateSendToTezosResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSendToTezosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSendToTezosResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSendToTezosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSendToTezosResponse.Merge(m, src)
}
func (m *MsgCreateSendToTezosResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSendToTezosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSendToTezosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSendToTezosResponse proto.InternalMessageInfo

func (m *MsgCreateSendToTezosResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSendToTezos struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	TezosReceiver string `protobuf:"bytes,3,opt,name=tezosReceiver,proto3" json:"tezosReceiver,omitempty"`
	Amount        string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom         string `protobuf:"bytes,5,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (m *MsgUpdateSendToTezos) Reset()         { *m = MsgUpdateSendToTezos{} }
func (m *MsgUpdateSendToTezos) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSendToTezos) ProtoMessage()    {}
func (*MsgUpdateSendToTezos) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{14}
}
func (m *MsgUpdateSendToTezos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSendToTezos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSendToTezos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSendToTezos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSendToTezos.Merge(m, src)
}
func (m *MsgUpdateSendToTezos) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSendToTezos) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSendToTezos.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSendToTezos proto.InternalMessageInfo

func (m *MsgUpdateSendToTezos) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSendToTezos) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSendToTezos) GetTezosReceiver() string {
	if m != nil {
		return m.TezosReceiver
	}
	return ""
}

func (m *MsgUpdateSendToTezos) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgUpdateSendToTezos) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

type MsgUpdateSendToTezosResponse struct {
}

func (m *MsgUpdateSendToTezosResponse) Reset()         { *m = MsgUpdateSendToTezosResponse{} }
func (m *MsgUpdateSendToTezosResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSendToTezosResponse) ProtoMessage()    {}
func (*MsgUpdateSendToTezosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{15}
}
func (m *MsgUpdateSendToTezosResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSendToTezosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSendToTezosResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSendToTezosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSendToTezosResponse.Merge(m, src)
}
func (m *MsgUpdateSendToTezosResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSendToTezosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSendToTezosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSendToTezosResponse proto.InternalMessageInfo

type MsgDeleteSendToTezos struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSendToTezos) Reset()         { *m = MsgDeleteSendToTezos{} }
func (m *MsgDeleteSendToTezos) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSendToTezos) ProtoMessage()    {}
func (*MsgDeleteSendToTezos) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{16}
}
func (m *MsgDeleteSendToTezos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSendToTezos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSendToTezos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSendToTezos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSendToTezos.Merge(m, src)
}
func (m *MsgDeleteSendToTezos) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSendToTezos) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSendToTezos.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSendToTezos proto.InternalMessageInfo

func (m *MsgDeleteSendToTezos) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSendToTezos) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSendToTezosResponse struct {
}

func (m *MsgDeleteSendToTezosResponse) Reset()         { *m = MsgDeleteSendToTezosResponse{} }
func (m *MsgDeleteSendToTezosResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSendToTezosResponse) ProtoMessage()    {}
func (*MsgDeleteSendToTezosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{17}
}
func (m *MsgDeleteSendToTezosResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSendToTezosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSendToTezosResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSendToTezosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSendToTezosResponse.Merge(m, src)
}
func (m *MsgDeleteSendToTezosResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSendToTezosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSendToTezosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSendToTezosResponse proto.InternalMessageInfo

type MsgCreateReceivedTxs struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Txid           string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	TezosSender    string `protobuf:"bytes,3,opt,name=tezosSender,proto3" json:"tezosSender,omitempty"`
	CosmosReceiver string `protobuf:"bytes,4,opt,name=cosmosReceiver,proto3" json:"cosmosReceiver,omitempty"`
	Amount         string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom          string `protobuf:"bytes,6,opt,name=denom,proto3" json:"denom,omitempty"`
	SrcChain       string `protobuf:"bytes,7,opt,name=srcChain,proto3" json:"srcChain,omitempty"`
	DestChain      string `protobuf:"bytes,8,opt,name=destChain,proto3" json:"destChain,omitempty"`
	TxStatus       string `protobuf:"bytes,9,opt,name=txStatus,proto3" json:"txStatus,omitempty"`
	Timestamp      string `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RelayTimestamp string `protobuf:"bytes,11,opt,name=relayTimestamp,proto3" json:"relayTimestamp,omitempty"`
}

func (m *MsgCreateReceivedTxs) Reset()         { *m = MsgCreateReceivedTxs{} }
func (m *MsgCreateReceivedTxs) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReceivedTxs) ProtoMessage()    {}
func (*MsgCreateReceivedTxs) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{18}
}
func (m *MsgCreateReceivedTxs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReceivedTxs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReceivedTxs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReceivedTxs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReceivedTxs.Merge(m, src)
}
func (m *MsgCreateReceivedTxs) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReceivedTxs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReceivedTxs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReceivedTxs proto.InternalMessageInfo

func (m *MsgCreateReceivedTxs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetTezosSender() string {
	if m != nil {
		return m.TezosSender
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetCosmosReceiver() string {
	if m != nil {
		return m.CosmosReceiver
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetSrcChain() string {
	if m != nil {
		return m.SrcChain
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetDestChain() string {
	if m != nil {
		return m.DestChain
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetTxStatus() string {
	if m != nil {
		return m.TxStatus
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *MsgCreateReceivedTxs) GetRelayTimestamp() string {
	if m != nil {
		return m.RelayTimestamp
	}
	return ""
}

type MsgCreateReceivedTxsResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateReceivedTxsResponse) Reset()         { *m = MsgCreateReceivedTxsResponse{} }
func (m *MsgCreateReceivedTxsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReceivedTxsResponse) ProtoMessage()    {}
func (*MsgCreateReceivedTxsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{19}
}
func (m *MsgCreateReceivedTxsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReceivedTxsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReceivedTxsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReceivedTxsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReceivedTxsResponse.Merge(m, src)
}
func (m *MsgCreateReceivedTxsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReceivedTxsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReceivedTxsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReceivedTxsResponse proto.InternalMessageInfo

func (m *MsgCreateReceivedTxsResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateReceivedTxs struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id             uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Txid           string `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	TezosSender    string `protobuf:"bytes,4,opt,name=tezosSender,proto3" json:"tezosSender,omitempty"`
	CosmosReceiver string `protobuf:"bytes,5,opt,name=cosmosReceiver,proto3" json:"cosmosReceiver,omitempty"`
	Amount         string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom          string `protobuf:"bytes,7,opt,name=denom,proto3" json:"denom,omitempty"`
	SrcChain       string `protobuf:"bytes,8,opt,name=srcChain,proto3" json:"srcChain,omitempty"`
	DestChain      string `protobuf:"bytes,9,opt,name=destChain,proto3" json:"destChain,omitempty"`
	TxStatus       string `protobuf:"bytes,10,opt,name=txStatus,proto3" json:"txStatus,omitempty"`
	Timestamp      string `protobuf:"bytes,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RelayTimestamp string `protobuf:"bytes,12,opt,name=relayTimestamp,proto3" json:"relayTimestamp,omitempty"`
}

func (m *MsgUpdateReceivedTxs) Reset()         { *m = MsgUpdateReceivedTxs{} }
func (m *MsgUpdateReceivedTxs) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReceivedTxs) ProtoMessage()    {}
func (*MsgUpdateReceivedTxs) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{20}
}
func (m *MsgUpdateReceivedTxs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReceivedTxs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReceivedTxs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReceivedTxs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReceivedTxs.Merge(m, src)
}
func (m *MsgUpdateReceivedTxs) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReceivedTxs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReceivedTxs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReceivedTxs proto.InternalMessageInfo

func (m *MsgUpdateReceivedTxs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateReceivedTxs) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetTezosSender() string {
	if m != nil {
		return m.TezosSender
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetCosmosReceiver() string {
	if m != nil {
		return m.CosmosReceiver
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetSrcChain() string {
	if m != nil {
		return m.SrcChain
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetDestChain() string {
	if m != nil {
		return m.DestChain
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetTxStatus() string {
	if m != nil {
		return m.TxStatus
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *MsgUpdateReceivedTxs) GetRelayTimestamp() string {
	if m != nil {
		return m.RelayTimestamp
	}
	return ""
}

type MsgUpdateReceivedTxsResponse struct {
}

func (m *MsgUpdateReceivedTxsResponse) Reset()         { *m = MsgUpdateReceivedTxsResponse{} }
func (m *MsgUpdateReceivedTxsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReceivedTxsResponse) ProtoMessage()    {}
func (*MsgUpdateReceivedTxsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{21}
}
func (m *MsgUpdateReceivedTxsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReceivedTxsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReceivedTxsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReceivedTxsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReceivedTxsResponse.Merge(m, src)
}
func (m *MsgUpdateReceivedTxsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReceivedTxsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReceivedTxsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReceivedTxsResponse proto.InternalMessageInfo

type MsgDeleteReceivedTxs struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteReceivedTxs) Reset()         { *m = MsgDeleteReceivedTxs{} }
func (m *MsgDeleteReceivedTxs) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReceivedTxs) ProtoMessage()    {}
func (*MsgDeleteReceivedTxs) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{22}
}
func (m *MsgDeleteReceivedTxs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReceivedTxs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReceivedTxs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReceivedTxs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReceivedTxs.Merge(m, src)
}
func (m *MsgDeleteReceivedTxs) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReceivedTxs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReceivedTxs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReceivedTxs proto.InternalMessageInfo

func (m *MsgDeleteReceivedTxs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteReceivedTxs) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteReceivedTxsResponse struct {
}

func (m *MsgDeleteReceivedTxsResponse) Reset()         { *m = MsgDeleteReceivedTxsResponse{} }
func (m *MsgDeleteReceivedTxsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReceivedTxsResponse) ProtoMessage()    {}
func (*MsgDeleteReceivedTxsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1086b1804b7c03fb, []int{23}
}
func (m *MsgDeleteReceivedTxsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReceivedTxsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReceivedTxsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReceivedTxsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReceivedTxsResponse.Merge(m, src)
}
func (m *MsgDeleteReceivedTxsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReceivedTxsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReceivedTxsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReceivedTxsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateSendToTezosSigned)(nil), "sap200.bifrost.bifrost.MsgCreateSendToTezosSigned")
	proto.RegisterType((*MsgCreateSendToTezosSignedResponse)(nil), "sap200.bifrost.bifrost.MsgCreateSendToTezosSignedResponse")
	proto.RegisterType((*MsgUpdateSendToTezosSigned)(nil), "sap200.bifrost.bifrost.MsgUpdateSendToTezosSigned")
	proto.RegisterType((*MsgUpdateSendToTezosSignedResponse)(nil), "sap200.bifrost.bifrost.MsgUpdateSendToTezosSignedResponse")
	proto.RegisterType((*MsgDeleteSendToTezosSigned)(nil), "sap200.bifrost.bifrost.MsgDeleteSendToTezosSigned")
	proto.RegisterType((*MsgDeleteSendToTezosSignedResponse)(nil), "sap200.bifrost.bifrost.MsgDeleteSendToTezosSignedResponse")
	proto.RegisterType((*MsgCreateReceivedFa12Txs)(nil), "sap200.bifrost.bifrost.MsgCreateReceivedFa12Txs")
	proto.RegisterType((*MsgCreateReceivedFa12TxsResponse)(nil), "sap200.bifrost.bifrost.MsgCreateReceivedFa12TxsResponse")
	proto.RegisterType((*MsgUpdateReceivedFa12Txs)(nil), "sap200.bifrost.bifrost.MsgUpdateReceivedFa12Txs")
	proto.RegisterType((*MsgUpdateReceivedFa12TxsResponse)(nil), "sap200.bifrost.bifrost.MsgUpdateReceivedFa12TxsResponse")
	proto.RegisterType((*MsgDeleteReceivedFa12Txs)(nil), "sap200.bifrost.bifrost.MsgDeleteReceivedFa12Txs")
	proto.RegisterType((*MsgDeleteReceivedFa12TxsResponse)(nil), "sap200.bifrost.bifrost.MsgDeleteReceivedFa12TxsResponse")
	proto.RegisterType((*MsgCreateSendToTezos)(nil), "sap200.bifrost.bifrost.MsgCreateSendToTezos")
	proto.RegisterType((*MsgCreateSendToTezosResponse)(nil), "sap200.bifrost.bifrost.MsgCreateSendToTezosResponse")
	proto.RegisterType((*MsgUpdateSendToTezos)(nil), "sap200.bifrost.bifrost.MsgUpdateSendToTezos")
	proto.RegisterType((*MsgUpdateSendToTezosResponse)(nil), "sap200.bifrost.bifrost.MsgUpdateSendToTezosResponse")
	proto.RegisterType((*MsgDeleteSendToTezos)(nil), "sap200.bifrost.bifrost.MsgDeleteSendToTezos")
	proto.RegisterType((*MsgDeleteSendToTezosResponse)(nil), "sap200.bifrost.bifrost.MsgDeleteSendToTezosResponse")
	proto.RegisterType((*MsgCreateReceivedTxs)(nil), "sap200.bifrost.bifrost.MsgCreateReceivedTxs")
	proto.RegisterType((*MsgCreateReceivedTxsResponse)(nil), "sap200.bifrost.bifrost.MsgCreateReceivedTxsResponse")
	proto.RegisterType((*MsgUpdateReceivedTxs)(nil), "sap200.bifrost.bifrost.MsgUpdateReceivedTxs")
	proto.RegisterType((*MsgUpdateReceivedTxsResponse)(nil), "sap200.bifrost.bifrost.MsgUpdateReceivedTxsResponse")
	proto.RegisterType((*MsgDeleteReceivedTxs)(nil), "sap200.bifrost.bifrost.MsgDeleteReceivedTxs")
	proto.RegisterType((*MsgDeleteReceivedTxsResponse)(nil), "sap200.bifrost.bifrost.MsgDeleteReceivedTxsResponse")
}

func init() { proto.RegisterFile("bifrost/tx.proto", fileDescriptor_1086b1804b7c03fb) }

var fileDescriptor_1086b1804b7c03fb = []byte{
	// 915 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x4f, 0x6f, 0xd3, 0x4a,
	0x10, 0xaf, 0xf3, 0xb7, 0xd9, 0xa4, 0xd5, 0x7b, 0xab, 0xb6, 0xcf, 0x2f, 0xea, 0xf3, 0xab, 0xac,
	0x0a, 0x81, 0x14, 0xa5, 0x21, 0xe4, 0x80, 0x38, 0x01, 0xad, 0x7a, 0x41, 0x95, 0x50, 0x1a, 0x2e,
	0xdc, 0xdc, 0x78, 0x49, 0x2d, 0x35, 0xb1, 0xe5, 0xdd, 0x96, 0x94, 0x2b, 0x5c, 0xb8, 0x81, 0xc4,
	0x81, 0x8f, 0xc0, 0xc7, 0xe0, 0xc8, 0xb1, 0xc7, 0x1e, 0x51, 0x7b, 0xe1, 0x63, 0x20, 0xef, 0xc6,
	0x5b, 0x3b, 0xde, 0x5d, 0xdb, 0x6d, 0x81, 0x53, 0xbd, 0x3b, 0x3b, 0xfb, 0x9b, 0x99, 0xdf, 0xcc,
	0xec, 0x34, 0xe0, 0xaf, 0x03, 0xe7, 0x95, 0xef, 0x62, 0xb2, 0x45, 0xa6, 0x6d, 0xcf, 0x77, 0x89,
	0x0b, 0xd7, 0xb0, 0xe5, 0x75, 0x3b, 0x9d, 0xf6, 0x4c, 0x10, 0xfe, 0x6d, 0xfe, 0x1f, 0x9e, 0xc4,
	0x68, 0x62, 0x0f, 0xdc, 0x01, 0x7a, 0xe3, 0xe2, 0x7d, 0x67, 0x34, 0x41, 0x36, 0x53, 0x6c, 0xfe,
	0x17, 0x1e, 0xf0, 0xd1, 0x10, 0x39, 0x27, 0xc8, 0xde, 0xb5, 0xee, 0x77, 0x07, 0x53, 0x3c, 0x13,
	0xff, 0x2b, 0xd0, 0x9f, 0x17, 0x85, 0x9a, 0x5c, 0xcb, 0xfc, 0xaa, 0x81, 0xe6, 0x1e, 0x1e, 0x6d,
	0xfb, 0xc8, 0x22, 0x68, 0x7f, 0x1e, 0x19, 0xea, 0xa0, 0x3a, 0x0c, 0x44, 0xae, 0xaf, 0x6b, 0x1b,
	0xda, 0xdd, 0x5a, 0x3f, 0x5c, 0xc2, 0x4d, 0xb0, 0x44, 0x82, 0x83, 0x7d, 0x76, 0xa5, 0xaf, 0x17,
	0xa8, 0x3c, 0xbe, 0x09, 0xd7, 0x40, 0xc5, 0x1a, 0xbb, 0xc7, 0x13, 0xa2, 0x17, 0xa9, 0x78, 0xb6,
	0x82, 0x2b, 0xa0, 0x6c, 0xa3, 0x89, 0x3b, 0xd6, 0x4b, 0x74, 0x9b, 0x2d, 0x60, 0x0f, 0xac, 0x12,
	0x0e, 0xee, 0x3f, 0xf7, 0x9d, 0x13, 0x8b, 0xa0, 0x67, 0xe8, 0x54, 0x2f, 0xd3, 0x53, 0x62, 0xa1,
	0xd9, 0x03, 0xa6, 0xdc, 0x83, 0x3e, 0xc2, 0x9e, 0x3b, 0xc1, 0x08, 0x2e, 0x83, 0x82, 0x63, 0x53,
	0x27, 0x4a, 0xfd, 0x82, 0x63, 0x9b, 0x67, 0xcc, 0xf1, 0x17, 0x9e, 0x9d, 0xd3, 0x71, 0x76, 0x51,
	0x21, 0xbc, 0x28, 0x19, 0x88, 0xa2, 0x3a, 0x10, 0x25, 0x71, 0x20, 0xca, 0x99, 0x02, 0x51, 0x51,
	0x05, 0x62, 0x93, 0x06, 0x42, 0xe2, 0x51, 0x18, 0x08, 0x73, 0x97, 0xfa, 0xbd, 0x83, 0x8e, 0xd0,
	0x8d, 0xfc, 0x9e, 0xa1, 0x49, 0xee, 0xe1, 0x68, 0x9f, 0x8b, 0x40, 0xe7, 0xec, 0xf4, 0xe3, 0x89,
	0xab, 0x00, 0x83, 0xa0, 0x44, 0xa6, 0x33, 0xb8, 0x5a, 0x9f, 0x7e, 0xc3, 0x0d, 0x50, 0x67, 0x7e,
	0xa3, 0x89, 0xcd, 0xc3, 0x1c, 0xdd, 0x92, 0x64, 0xd5, 0x1d, 0xb0, 0x3c, 0x74, 0xf1, 0x38, 0xc2,
	0x10, 0x8b, 0xf5, 0xdc, 0x6e, 0x84, 0xa2, 0x4a, 0x8c, 0xa2, 0x26, 0x58, 0xc4, 0xfe, 0x70, 0xfb,
	0xd0, 0x72, 0x26, 0x7a, 0x95, 0x4a, 0xf8, 0x1a, 0xae, 0x83, 0x9a, 0x8d, 0x30, 0x61, 0xc2, 0x45,
	0x2a, 0xbc, 0xda, 0x08, 0x34, 0xc9, 0x74, 0x9f, 0x58, 0xe4, 0x18, 0xeb, 0x35, 0xa6, 0x19, 0xae,
	0xa1, 0x01, 0x80, 0x83, 0x9f, 0x78, 0x9e, 0xef, 0x9e, 0x58, 0x47, 0x3a, 0xa0, 0xd2, 0xc8, 0x4e,
	0xa0, 0x6b, 0xd1, 0x6f, 0xe4, 0xeb, 0x75, 0xa6, 0x1b, 0xae, 0x03, 0x54, 0xe2, 0x8c, 0x11, 0x26,
	0xd6, 0xd8, 0xd3, 0x1b, 0x0c, 0x95, 0x6f, 0x04, 0xfe, 0xfa, 0xe8, 0xc8, 0x3a, 0x1d, 0xf0, 0x23,
	0x4b, 0xcc, 0xdf, 0xf8, 0xae, 0xd9, 0x05, 0x1b, 0x32, 0x66, 0xa4, 0x55, 0xf3, 0x85, 0xd1, 0xc9,
	0x72, 0x2c, 0x3b, 0x9d, 0xf3, 0x35, 0x13, 0xd2, 0x5b, 0x94, 0xd3, 0x5b, 0x52, 0xd0, 0x5b, 0x56,
	0xd3, 0x5b, 0x49, 0xa1, 0xb7, 0x2a, 0xa5, 0x77, 0x51, 0x45, 0x6f, 0x4d, 0x45, 0x2f, 0x50, 0xd2,
	0x5b, 0x57, 0xd2, 0xdb, 0x50, 0xd1, 0xbb, 0x94, 0x4e, 0xef, 0xb2, 0x90, 0x5e, 0x93, 0xd2, 0x2b,
	0x64, 0x8a, 0x57, 0xe7, 0x0e, 0x65, 0x93, 0xd5, 0xf0, 0xb5, 0xd9, 0x9c, 0x21, 0x09, 0x6f, 0xe1,
	0x48, 0xef, 0x34, 0xb0, 0x22, 0xea, 0xd2, 0xbf, 0xf7, 0x85, 0x31, 0xdb, 0x60, 0x5d, 0x64, 0x85,
	0x34, 0xdf, 0x3f, 0x31, 0xb3, 0x13, 0x3d, 0xf5, 0xcf, 0xbe, 0x0f, 0xa6, 0x41, 0xdd, 0x48, 0x58,
	0xc5, 0xa3, 0xfd, 0x98, 0x5a, 0x9d, 0xe8, 0xcd, 0x39, 0x38, 0x65, 0x08, 0x89, 0x1b, 0x38, 0xc2,
	0x79, 0x21, 0xc2, 0x67, 0xff, 0x6a, 0xac, 0xb8, 0xf5, 0x9e, 0x9e, 0x2c, 0xef, 0x52, 0x4a, 0x79,
	0x97, 0xc5, 0x01, 0xac, 0x44, 0x9b, 0xc6, 0xaf, 0xe9, 0xe9, 0xb1, 0xc2, 0x05, 0xe9, 0x85, 0x5b,
	0x17, 0x16, 0x6e, 0x34, 0x47, 0x23, 0x91, 0x95, 0xe6, 0xe8, 0x8f, 0x42, 0x24, 0x47, 0xb3, 0x51,
	0x71, 0x3b, 0xfd, 0xf8, 0xa6, 0x0f, 0x2b, 0xa7, 0xa6, 0x2a, 0xa3, 0xe6, 0xf6, 0xfa, 0x71, 0x8c,
	0x9a, 0x7a, 0x3a, 0x35, 0x0d, 0x21, 0x35, 0xd1, 0xba, 0x13, 0x50, 0x13, 0xab, 0xbb, 0x6b, 0x31,
	0x11, 0xab, 0x3b, 0x01, 0x42, 0xf7, 0x63, 0x03, 0x14, 0xf7, 0xf0, 0x08, 0xbe, 0xd7, 0xc0, 0x3f,
	0xb2, 0xa1, 0xbd, 0xdb, 0x16, 0xff, 0x8b, 0xd1, 0x96, 0x8f, 0xc9, 0xcd, 0x47, 0xf9, 0x75, 0x78,
	0x42, 0x06, 0xb6, 0xc8, 0xe6, 0x68, 0x95, 0x2d, 0x12, 0x1d, 0xa5, 0x2d, 0x29, 0xd3, 0x2d, 0xb5,
	0x45, 0x36, 0xdb, 0xaa, 0x6c, 0x91, 0xe8, 0x28, 0x6d, 0x49, 0x99, 0x7d, 0xe1, 0x5b, 0x0d, 0xac,
	0x8a, 0x07, 0xdf, 0x4e, 0x6a, 0xb4, 0xe7, 0x34, 0x9a, 0x0f, 0xf3, 0x6a, 0xc4, 0xac, 0x10, 0xcf,
	0x6b, 0x9d, 0xd4, 0x38, 0xe7, 0xb1, 0x42, 0x39, 0x69, 0x50, 0x2b, 0xc4, 0x73, 0x46, 0x27, 0x35,
	0xc2, 0x79, 0xac, 0x50, 0x4e, 0x21, 0xf0, 0x35, 0xf8, 0x3b, 0x39, 0x81, 0xb4, 0xf2, 0xa4, 0x7e,
	0xb3, 0x97, 0xe7, 0x74, 0x14, 0x38, 0x39, 0x43, 0xb4, 0xf2, 0xe4, 0xb9, 0x12, 0x58, 0x3a, 0x09,
	0x04, 0xc0, 0xc9, 0x31, 0xa0, 0x95, 0x27, 0xa9, 0x95, 0xc0, 0xd2, 0x01, 0xe1, 0x2a, 0xd4, 0xd1,
	0x3e, 0xd8, 0xca, 0x9c, 0xc5, 0x01, 0xcf, 0xbd, 0x3c, 0xa7, 0x93, 0xa1, 0xce, 0x0a, 0x9c, 0x38,
	0x9d, 0x21, 0xd4, 0x12, 0xe0, 0x64, 0xe7, 0x6f, 0x65, 0xce, 0xd5, 0x34, 0x60, 0xe9, 0x9b, 0xf0,
	0x74, 0xfb, 0xdb, 0x85, 0xa1, 0x9d, 0x5d, 0x18, 0xda, 0xf7, 0x0b, 0x43, 0xfb, 0x70, 0x69, 0x2c,
	0x9c, 0x5d, 0x1a, 0x0b, 0xe7, 0x97, 0xc6, 0xc2, 0xcb, 0x7b, 0x23, 0x87, 0x1c, 0x1e, 0x1f, 0xb4,
	0x87, 0xee, 0x78, 0x8b, 0xdd, 0xbc, 0x15, 0xfe, 0x14, 0x34, 0xe5, 0x5f, 0xe4, 0xd4, 0x43, 0xf8,
	0xa0, 0x42, 0x7f, 0x0f, 0x7a, 0xf0, 0x33, 0x00, 0x00, 0xff, 0xff, 0xbc, 0xdc, 0x0c, 0xa5, 0xb1,
	0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateSendToTezosSigned(ctx context.Context, in *MsgCreateSendToTezosSigned, opts ...grpc.CallOption) (*MsgCreateSendToTezosSignedResponse, error)
	UpdateSendToTezosSigned(ctx context.Context, in *MsgUpdateSendToTezosSigned, opts ...grpc.CallOption) (*MsgUpdateSendToTezosSignedResponse, error)
	DeleteSendToTezosSigned(ctx context.Context, in *MsgDeleteSendToTezosSigned, opts ...grpc.CallOption) (*MsgDeleteSendToTezosSignedResponse, error)
	CreateReceivedFa12Txs(ctx context.Context, in *MsgCreateReceivedFa12Txs, opts ...grpc.CallOption) (*MsgCreateReceivedFa12TxsResponse, error)
	UpdateReceivedFa12Txs(ctx context.Context, in *MsgUpdateReceivedFa12Txs, opts ...grpc.CallOption) (*MsgUpdateReceivedFa12TxsResponse, error)
	DeleteReceivedFa12Txs(ctx context.Context, in *MsgDeleteReceivedFa12Txs, opts ...grpc.CallOption) (*MsgDeleteReceivedFa12TxsResponse, error)
	CreateSendToTezos(ctx context.Context, in *MsgCreateSendToTezos, opts ...grpc.CallOption) (*MsgCreateSendToTezosResponse, error)
	UpdateSendToTezos(ctx context.Context, in *MsgUpdateSendToTezos, opts ...grpc.CallOption) (*MsgUpdateSendToTezosResponse, error)
	DeleteSendToTezos(ctx context.Context, in *MsgDeleteSendToTezos, opts ...grpc.CallOption) (*MsgDeleteSendToTezosResponse, error)
	CreateReceivedTxs(ctx context.Context, in *MsgCreateReceivedTxs, opts ...grpc.CallOption) (*MsgCreateReceivedTxsResponse, error)
	UpdateReceivedTxs(ctx context.Context, in *MsgUpdateReceivedTxs, opts ...grpc.CallOption) (*MsgUpdateReceivedTxsResponse, error)
	DeleteReceivedTxs(ctx context.Context, in *MsgDeleteReceivedTxs, opts ...grpc.CallOption) (*MsgDeleteReceivedTxsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateSendToTezosSigned(ctx context.Context, in *MsgCreateSendToTezosSigned, opts ...grpc.CallOption) (*MsgCreateSendToTezosSignedResponse, error) {
	out := new(MsgCreateSendToTezosSignedResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/CreateSendToTezosSigned", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSendToTezosSigned(ctx context.Context, in *MsgUpdateSendToTezosSigned, opts ...grpc.CallOption) (*MsgUpdateSendToTezosSignedResponse, error) {
	out := new(MsgUpdateSendToTezosSignedResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/UpdateSendToTezosSigned", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSendToTezosSigned(ctx context.Context, in *MsgDeleteSendToTezosSigned, opts ...grpc.CallOption) (*MsgDeleteSendToTezosSignedResponse, error) {
	out := new(MsgDeleteSendToTezosSignedResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/DeleteSendToTezosSigned", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateReceivedFa12Txs(ctx context.Context, in *MsgCreateReceivedFa12Txs, opts ...grpc.CallOption) (*MsgCreateReceivedFa12TxsResponse, error) {
	out := new(MsgCreateReceivedFa12TxsResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/CreateReceivedFa12Txs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateReceivedFa12Txs(ctx context.Context, in *MsgUpdateReceivedFa12Txs, opts ...grpc.CallOption) (*MsgUpdateReceivedFa12TxsResponse, error) {
	out := new(MsgUpdateReceivedFa12TxsResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/UpdateReceivedFa12Txs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteReceivedFa12Txs(ctx context.Context, in *MsgDeleteReceivedFa12Txs, opts ...grpc.CallOption) (*MsgDeleteReceivedFa12TxsResponse, error) {
	out := new(MsgDeleteReceivedFa12TxsResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/DeleteReceivedFa12Txs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSendToTezos(ctx context.Context, in *MsgCreateSendToTezos, opts ...grpc.CallOption) (*MsgCreateSendToTezosResponse, error) {
	out := new(MsgCreateSendToTezosResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/CreateSendToTezos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSendToTezos(ctx context.Context, in *MsgUpdateSendToTezos, opts ...grpc.CallOption) (*MsgUpdateSendToTezosResponse, error) {
	out := new(MsgUpdateSendToTezosResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/UpdateSendToTezos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSendToTezos(ctx context.Context, in *MsgDeleteSendToTezos, opts ...grpc.CallOption) (*MsgDeleteSendToTezosResponse, error) {
	out := new(MsgDeleteSendToTezosResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/DeleteSendToTezos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateReceivedTxs(ctx context.Context, in *MsgCreateReceivedTxs, opts ...grpc.CallOption) (*MsgCreateReceivedTxsResponse, error) {
	out := new(MsgCreateReceivedTxsResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/CreateReceivedTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateReceivedTxs(ctx context.Context, in *MsgUpdateReceivedTxs, opts ...grpc.CallOption) (*MsgUpdateReceivedTxsResponse, error) {
	out := new(MsgUpdateReceivedTxsResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/UpdateReceivedTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteReceivedTxs(ctx context.Context, in *MsgDeleteReceivedTxs, opts ...grpc.CallOption) (*MsgDeleteReceivedTxsResponse, error) {
	out := new(MsgDeleteReceivedTxsResponse)
	err := c.cc.Invoke(ctx, "/sap200.bifrost.bifrost.Msg/DeleteReceivedTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateSendToTezosSigned(context.Context, *MsgCreateSendToTezosSigned) (*MsgCreateSendToTezosSignedResponse, error)
	UpdateSendToTezosSigned(context.Context, *MsgUpdateSendToTezosSigned) (*MsgUpdateSendToTezosSignedResponse, error)
	DeleteSendToTezosSigned(context.Context, *MsgDeleteSendToTezosSigned) (*MsgDeleteSendToTezosSignedResponse, error)
	CreateReceivedFa12Txs(context.Context, *MsgCreateReceivedFa12Txs) (*MsgCreateReceivedFa12TxsResponse, error)
	UpdateReceivedFa12Txs(context.Context, *MsgUpdateReceivedFa12Txs) (*MsgUpdateReceivedFa12TxsResponse, error)
	DeleteReceivedFa12Txs(context.Context, *MsgDeleteReceivedFa12Txs) (*MsgDeleteReceivedFa12TxsResponse, error)
	CreateSendToTezos(context.Context, *MsgCreateSendToTezos) (*MsgCreateSendToTezosResponse, error)
	UpdateSendToTezos(context.Context, *MsgUpdateSendToTezos) (*MsgUpdateSendToTezosResponse, error)
	DeleteSendToTezos(context.Context, *MsgDeleteSendToTezos) (*MsgDeleteSendToTezosResponse, error)
	CreateReceivedTxs(context.Context, *MsgCreateReceivedTxs) (*MsgCreateReceivedTxsResponse, error)
	UpdateReceivedTxs(context.Context, *MsgUpdateReceivedTxs) (*MsgUpdateReceivedTxsResponse, error)
	DeleteReceivedTxs(context.Context, *MsgDeleteReceivedTxs) (*MsgDeleteReceivedTxsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateSendToTezosSigned(ctx context.Context, req *MsgCreateSendToTezosSigned) (*MsgCreateSendToTezosSignedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSendToTezosSigned not implemented")
}
func (*UnimplementedMsgServer) UpdateSendToTezosSigned(ctx context.Context, req *MsgUpdateSendToTezosSigned) (*MsgUpdateSendToTezosSignedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSendToTezosSigned not implemented")
}
func (*UnimplementedMsgServer) DeleteSendToTezosSigned(ctx context.Context, req *MsgDeleteSendToTezosSigned) (*MsgDeleteSendToTezosSignedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSendToTezosSigned not implemented")
}
func (*UnimplementedMsgServer) CreateReceivedFa12Txs(ctx context.Context, req *MsgCreateReceivedFa12Txs) (*MsgCreateReceivedFa12TxsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReceivedFa12Txs not implemented")
}
func (*UnimplementedMsgServer) UpdateReceivedFa12Txs(ctx context.Context, req *MsgUpdateReceivedFa12Txs) (*MsgUpdateReceivedFa12TxsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReceivedFa12Txs not implemented")
}
func (*UnimplementedMsgServer) DeleteReceivedFa12Txs(ctx context.Context, req *MsgDeleteReceivedFa12Txs) (*MsgDeleteReceivedFa12TxsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteReceivedFa12Txs not implemented")
}
func (*UnimplementedMsgServer) CreateSendToTezos(ctx context.Context, req *MsgCreateSendToTezos) (*MsgCreateSendToTezosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSendToTezos not implemented")
}
func (*UnimplementedMsgServer) UpdateSendToTezos(ctx context.Context, req *MsgUpdateSendToTezos) (*MsgUpdateSendToTezosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSendToTezos not implemented")
}
func (*UnimplementedMsgServer) DeleteSendToTezos(ctx context.Context, req *MsgDeleteSendToTezos) (*MsgDeleteSendToTezosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSendToTezos not implemented")
}
func (*UnimplementedMsgServer) CreateReceivedTxs(ctx context.Context, req *MsgCreateReceivedTxs) (*MsgCreateReceivedTxsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReceivedTxs not implemented")
}
func (*UnimplementedMsgServer) UpdateReceivedTxs(ctx context.Context, req *MsgUpdateReceivedTxs) (*MsgUpdateReceivedTxsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReceivedTxs not implemented")
}
func (*UnimplementedMsgServer) DeleteReceivedTxs(ctx context.Context, req *MsgDeleteReceivedTxs) (*MsgDeleteReceivedTxsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteReceivedTxs not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateSendToTezosSigned_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSendToTezosSigned)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSendToTezosSigned(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/CreateSendToTezosSigned",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSendToTezosSigned(ctx, req.(*MsgCreateSendToTezosSigned))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSendToTezosSigned_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSendToTezosSigned)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSendToTezosSigned(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/UpdateSendToTezosSigned",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSendToTezosSigned(ctx, req.(*MsgUpdateSendToTezosSigned))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSendToTezosSigned_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSendToTezosSigned)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSendToTezosSigned(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/DeleteSendToTezosSigned",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSendToTezosSigned(ctx, req.(*MsgDeleteSendToTezosSigned))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateReceivedFa12Txs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateReceivedFa12Txs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateReceivedFa12Txs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/CreateReceivedFa12Txs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateReceivedFa12Txs(ctx, req.(*MsgCreateReceivedFa12Txs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateReceivedFa12Txs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateReceivedFa12Txs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateReceivedFa12Txs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/UpdateReceivedFa12Txs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateReceivedFa12Txs(ctx, req.(*MsgUpdateReceivedFa12Txs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteReceivedFa12Txs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteReceivedFa12Txs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteReceivedFa12Txs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/DeleteReceivedFa12Txs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteReceivedFa12Txs(ctx, req.(*MsgDeleteReceivedFa12Txs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSendToTezos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSendToTezos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSendToTezos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/CreateSendToTezos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSendToTezos(ctx, req.(*MsgCreateSendToTezos))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSendToTezos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSendToTezos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSendToTezos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/UpdateSendToTezos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSendToTezos(ctx, req.(*MsgUpdateSendToTezos))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSendToTezos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSendToTezos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSendToTezos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/DeleteSendToTezos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSendToTezos(ctx, req.(*MsgDeleteSendToTezos))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateReceivedTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateReceivedTxs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateReceivedTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/CreateReceivedTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateReceivedTxs(ctx, req.(*MsgCreateReceivedTxs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateReceivedTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateReceivedTxs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateReceivedTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/UpdateReceivedTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateReceivedTxs(ctx, req.(*MsgUpdateReceivedTxs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteReceivedTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteReceivedTxs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteReceivedTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.bifrost.bifrost.Msg/DeleteReceivedTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteReceivedTxs(ctx, req.(*MsgDeleteReceivedTxs))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sap200.bifrost.bifrost.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSendToTezosSigned",
			Handler:    _Msg_CreateSendToTezosSigned_Handler,
		},
		{
			MethodName: "UpdateSendToTezosSigned",
			Handler:    _Msg_UpdateSendToTezosSigned_Handler,
		},
		{
			MethodName: "DeleteSendToTezosSigned",
			Handler:    _Msg_DeleteSendToTezosSigned_Handler,
		},
		{
			MethodName: "CreateReceivedFa12Txs",
			Handler:    _Msg_CreateReceivedFa12Txs_Handler,
		},
		{
			MethodName: "UpdateReceivedFa12Txs",
			Handler:    _Msg_UpdateReceivedFa12Txs_Handler,
		},
		{
			MethodName: "DeleteReceivedFa12Txs",
			Handler:    _Msg_DeleteReceivedFa12Txs_Handler,
		},
		{
			MethodName: "CreateSendToTezos",
			Handler:    _Msg_CreateSendToTezos_Handler,
		},
		{
			MethodName: "UpdateSendToTezos",
			Handler:    _Msg_UpdateSendToTezos_Handler,
		},
		{
			MethodName: "DeleteSendToTezos",
			Handler:    _Msg_DeleteSendToTezos_Handler,
		},
		{
			MethodName: "CreateReceivedTxs",
			Handler:    _Msg_CreateReceivedTxs_Handler,
		},
		{
			MethodName: "UpdateReceivedTxs",
			Handler:    _Msg_UpdateReceivedTxs_Handler,
		},
		{
			MethodName: "DeleteReceivedTxs",
			Handler:    _Msg_DeleteReceivedTxs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bifrost/tx.proto",
}

func (m *MsgCreateSendToTezosSigned) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSendToTezosSigned) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSendToTezosSigned) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TezosSignerPrivateKey) > 0 {
		i -= len(m.TezosSignerPrivateKey)
		copy(dAtA[i:], m.TezosSignerPrivateKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosSignerPrivateKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TezosReceiver) > 0 {
		i -= len(m.TezosReceiver)
		copy(dAtA[i:], m.TezosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosReceiver)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSendToTezosSignedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSendToTezosSignedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSendToTezosSignedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSendToTezosSigned) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSendToTezosSigned) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSendToTezosSigned) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TezosSignerPrivateKey) > 0 {
		i -= len(m.TezosSignerPrivateKey)
		copy(dAtA[i:], m.TezosSignerPrivateKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosSignerPrivateKey)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TezosReceiver) > 0 {
		i -= len(m.TezosReceiver)
		copy(dAtA[i:], m.TezosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosReceiver)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSendToTezosSignedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSendToTezosSignedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSendToTezosSignedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSendToTezosSigned) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSendToTezosSigned) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSendToTezosSigned) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSendToTezosSignedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSendToTezosSignedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSendToTezosSignedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateReceivedFa12Txs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReceivedFa12Txs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReceivedFa12Txs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RelayTimestamp) > 0 {
		i -= len(m.RelayTimestamp)
		copy(dAtA[i:], m.RelayTimestamp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayTimestamp)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Approver) > 0 {
		i -= len(m.Approver)
		copy(dAtA[i:], m.Approver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Approver)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.IsApproval) > 0 {
		i -= len(m.IsApproval)
		copy(dAtA[i:], m.IsApproval)
		i = encodeVarintTx(dAtA, i, uint64(len(m.IsApproval)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.TxStatus) > 0 {
		i -= len(m.TxStatus)
		copy(dAtA[i:], m.TxStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxStatus)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.DestChain) > 0 {
		i -= len(m.DestChain)
		copy(dAtA[i:], m.DestChain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DestChain)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SrcChain) > 0 {
		i -= len(m.SrcChain)
		copy(dAtA[i:], m.SrcChain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SrcChain)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CosmosReceiver) > 0 {
		i -= len(m.CosmosReceiver)
		copy(dAtA[i:], m.CosmosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CosmosReceiver)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TezosSender) > 0 {
		i -= len(m.TezosSender)
		copy(dAtA[i:], m.TezosSender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosSender)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Txid) > 0 {
		i -= len(m.Txid)
		copy(dAtA[i:], m.Txid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Txid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateReceivedFa12TxsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReceivedFa12TxsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReceivedFa12TxsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReceivedFa12Txs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReceivedFa12Txs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReceivedFa12Txs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RelayTimestamp) > 0 {
		i -= len(m.RelayTimestamp)
		copy(dAtA[i:], m.RelayTimestamp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayTimestamp)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Approver) > 0 {
		i -= len(m.Approver)
		copy(dAtA[i:], m.Approver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Approver)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.IsApproval) > 0 {
		i -= len(m.IsApproval)
		copy(dAtA[i:], m.IsApproval)
		i = encodeVarintTx(dAtA, i, uint64(len(m.IsApproval)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.TxStatus) > 0 {
		i -= len(m.TxStatus)
		copy(dAtA[i:], m.TxStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxStatus)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.DestChain) > 0 {
		i -= len(m.DestChain)
		copy(dAtA[i:], m.DestChain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DestChain)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.SrcChain) > 0 {
		i -= len(m.SrcChain)
		copy(dAtA[i:], m.SrcChain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SrcChain)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CosmosReceiver) > 0 {
		i -= len(m.CosmosReceiver)
		copy(dAtA[i:], m.CosmosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CosmosReceiver)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TezosSender) > 0 {
		i -= len(m.TezosSender)
		copy(dAtA[i:], m.TezosSender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosSender)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Txid) > 0 {
		i -= len(m.Txid)
		copy(dAtA[i:], m.Txid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Txid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReceivedFa12TxsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReceivedFa12TxsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReceivedFa12TxsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReceivedFa12Txs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReceivedFa12Txs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReceivedFa12Txs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReceivedFa12TxsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReceivedFa12TxsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReceivedFa12TxsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSendToTezos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSendToTezos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSendToTezos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TezosReceiver) > 0 {
		i -= len(m.TezosReceiver)
		copy(dAtA[i:], m.TezosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosReceiver)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSendToTezosResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSendToTezosResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSendToTezosResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSendToTezos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSendToTezos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSendToTezos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TezosReceiver) > 0 {
		i -= len(m.TezosReceiver)
		copy(dAtA[i:], m.TezosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosReceiver)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSendToTezosResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSendToTezosResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSendToTezosResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSendToTezos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSendToTezos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSendToTezos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSendToTezosResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSendToTezosResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSendToTezosResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateReceivedTxs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReceivedTxs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReceivedTxs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RelayTimestamp) > 0 {
		i -= len(m.RelayTimestamp)
		copy(dAtA[i:], m.RelayTimestamp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayTimestamp)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.TxStatus) > 0 {
		i -= len(m.TxStatus)
		copy(dAtA[i:], m.TxStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxStatus)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.DestChain) > 0 {
		i -= len(m.DestChain)
		copy(dAtA[i:], m.DestChain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DestChain)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SrcChain) > 0 {
		i -= len(m.SrcChain)
		copy(dAtA[i:], m.SrcChain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SrcChain)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CosmosReceiver) > 0 {
		i -= len(m.CosmosReceiver)
		copy(dAtA[i:], m.CosmosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CosmosReceiver)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TezosSender) > 0 {
		i -= len(m.TezosSender)
		copy(dAtA[i:], m.TezosSender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosSender)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Txid) > 0 {
		i -= len(m.Txid)
		copy(dAtA[i:], m.Txid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Txid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateReceivedTxsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReceivedTxsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReceivedTxsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReceivedTxs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReceivedTxs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReceivedTxs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RelayTimestamp) > 0 {
		i -= len(m.RelayTimestamp)
		copy(dAtA[i:], m.RelayTimestamp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayTimestamp)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.TxStatus) > 0 {
		i -= len(m.TxStatus)
		copy(dAtA[i:], m.TxStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxStatus)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.DestChain) > 0 {
		i -= len(m.DestChain)
		copy(dAtA[i:], m.DestChain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DestChain)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.SrcChain) > 0 {
		i -= len(m.SrcChain)
		copy(dAtA[i:], m.SrcChain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SrcChain)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CosmosReceiver) > 0 {
		i -= len(m.CosmosReceiver)
		copy(dAtA[i:], m.CosmosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CosmosReceiver)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TezosSender) > 0 {
		i -= len(m.TezosSender)
		copy(dAtA[i:], m.TezosSender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TezosSender)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Txid) > 0 {
		i -= len(m.Txid)
		copy(dAtA[i:], m.Txid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Txid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReceivedTxsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReceivedTxsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReceivedTxsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReceivedTxs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReceivedTxs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReceivedTxs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReceivedTxsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReceivedTxsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReceivedTxsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateSendToTezosSigned) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TezosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TezosSignerPrivateKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSendToTezosSignedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSendToTezosSigned) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.TezosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TezosSignerPrivateKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSendToTezosSignedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSendToTezosSigned) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSendToTezosSignedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateReceivedFa12Txs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Txid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TezosSender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CosmosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SrcChain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DestChain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.IsApproval)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Approver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RelayTimestamp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateReceivedFa12TxsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateReceivedFa12Txs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Txid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TezosSender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CosmosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SrcChain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DestChain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.IsApproval)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Approver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RelayTimestamp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateReceivedFa12TxsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteReceivedFa12Txs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteReceivedFa12TxsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSendToTezos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TezosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSendToTezosResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSendToTezos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.TezosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSendToTezosResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSendToTezos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSendToTezosResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateReceivedTxs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Txid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TezosSender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CosmosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SrcChain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DestChain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RelayTimestamp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateReceivedTxsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateReceivedTxs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Txid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TezosSender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CosmosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SrcChain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DestChain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RelayTimestamp)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateReceivedTxsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteReceivedTxs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteReceivedTxsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateSendToTezosSigned) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSendToTezosSigned: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSendToTezosSigned: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosSignerPrivateKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosSignerPrivateKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSendToTezosSignedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSendToTezosSignedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSendToTezosSignedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSendToTezosSigned) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSendToTezosSigned: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSendToTezosSigned: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosSignerPrivateKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosSignerPrivateKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSendToTezosSignedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSendToTezosSignedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSendToTezosSignedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSendToTezosSigned) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSendToTezosSigned: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSendToTezosSigned: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSendToTezosSignedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSendToTezosSignedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSendToTezosSignedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateReceivedFa12Txs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReceivedFa12Txs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReceivedFa12Txs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Txid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosSender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosSender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosmosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CosmosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsApproval", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsApproval = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Approver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateReceivedFa12TxsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReceivedFa12TxsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReceivedFa12TxsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReceivedFa12Txs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReceivedFa12Txs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReceivedFa12Txs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Txid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosSender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosSender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosmosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CosmosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsApproval", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsApproval = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Approver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReceivedFa12TxsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReceivedFa12TxsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReceivedFa12TxsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReceivedFa12Txs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReceivedFa12Txs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReceivedFa12Txs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReceivedFa12TxsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReceivedFa12TxsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReceivedFa12TxsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSendToTezos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSendToTezos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSendToTezos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSendToTezosResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSendToTezosResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSendToTezosResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSendToTezos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSendToTezos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSendToTezos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSendToTezosResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSendToTezosResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSendToTezosResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSendToTezos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSendToTezos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSendToTezos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSendToTezosResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSendToTezosResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSendToTezosResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateReceivedTxs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReceivedTxs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReceivedTxs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Txid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosSender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosSender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosmosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CosmosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateReceivedTxsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReceivedTxsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReceivedTxsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReceivedTxs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReceivedTxs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReceivedTxs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Txid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TezosSender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TezosSender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosmosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CosmosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReceivedTxsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReceivedTxsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReceivedTxsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReceivedTxs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReceivedTxs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReceivedTxs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReceivedTxsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReceivedTxsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReceivedTxsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
